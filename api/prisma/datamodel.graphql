type User {
  id: ID! @id
  firstName: String
  lastName: String
  email: String @unique
  phone: String
  password: String
  role: Role
  isRepresentative: Boolean @default(value: false)
  company: Company @relation(link: INLINE)
  points: Int
  validatedChallenges: [Challenge] @relation(link: INLINE)
  validatedQuizzes: [Quiz] @relation(link: INLINE)
}

type Place {
  id: ID! @id
  name: String! @unique
  category: Category! @relation(link: INLINE)
  address: Address
  user: User @relation(link: INLINE)
  social: Social
  headline: String
  description: String
  hours: [Hour!]
  tags: [Tag!] @relation(link: INLINE)
  photos: [Photo!] @relation(link: INLINE)
}

type Company {
  id: ID! @id
  name: String
  type: CompanyType
  address: Address
  users: [User]
  emailDomains: [String!]! @scalarList(strategy: EMBEDDED)
  stripeCustomerId: String
  challenges: [Challenge] @relation(link: INLINE)
  quizzes: [Quiz] @relation(link: INLINE)
}


type Tag {
  id: ID! @id
  label: String!
  children: [Tag!] @relation(link: INLINE)
  root: Boolean
  leaf: Boolean
  category: Category! @relation(link: INLINE)
}

type Photo {
  id: ID! @id
  url: String! @unique
}

type Address @embedded {
  street: String
  zipCode: String
  city: String
}

type Hour @embedded {
  day: Day
  start: String
  end: String
}

type Social @embedded {
  website: String
  facebook: String
  instagram: String
}

type Quiz {
  id: ID! @id
  name: String!
  question: String!
  choices: [String!]
  answer: String!
  value: Int!
  companies: [Company]
}

type Challenge {
  id: ID! @id
  name: String!
  description: String!
  value: Int!
  companies: [Company]
}

enum CompanyType {
  COMPANY
  SCHOOL
  PLACE
  COWORKING
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum Category {
  FOOD
  SHOP
  ACTIVITY
}

enum Role {
  SUPER_ADMIN
  ADMIN
  MODERATOR
  USER
  PLACE
}
